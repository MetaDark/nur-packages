language: nix

env:
  global:
    - CACHIX_CACHE=metadark
    - NUR_REPO=metadark
    - NIXPKGS_ALLOW_UNFREE=1

jobs:
  fast_finish: true

  include:
    - os: linux
      env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
    - os: linux
      env: NIX_CHANNEL=https://nixos.org/channels/nixos-unstable
    - os: linux
      env: NIX_CHANNEL=https://nixos.org/channels/nixos-19.09
    - os: osx
      env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
    - os: osx
      env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-19.09-darwin

  allow_failures:
    - os: osx
      env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
    - os: osx
      env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-19.09-darwin

install:
 - nix --version
 - if [ -n "${CACHIX_CACHE}" ]; then travis_retry nix-channel --update; fi
 - if [ -n "${CACHIX_CACHE}" ]; then nix-env -iA cachix -f https://cachix.org/api/v1/install; fi
 - if [ -n "${CACHIX_CACHE}" -a "osx" != "${TRAVIS_OS_NAME}" ]; then cachix use "${CACHIX_CACHE}"; fi
 - if [ -n "${CACHIX_CACHE}" -a "osx" = "${TRAVIS_OS_NAME}" ]; then sudo cachix use "${CACHIX_CACHE}"; fi
 - nix-channel --add "${NIX_CHANNEL}" nixpkgs
 - travis_retry nix-channel --update

script:
 - travis_wait 50 nix-build ci.nix -A buildOutputs --keep-going
 - nix eval -f default.nix 'lib'
 - nix eval -f default.nix 'modules'
 - nix eval -f default.nix 'overlays'

after_success:
  - if [ -n "${CACHIX_CACHE}" ]; then nix-build ci.nix -A cacheOutputs | cachix push "${CACHIX_CACHE}"; fi
  - if [ "cron" != "${TRAVIS_EVENT_TYPE}" -a "false" = "${TRAVIS_PULL_REQUEST}" -a "master" = "${TRAVIS_BRANCH}" ]; then
      curl -XPOST "https://nur-update.herokuapp.com/update?repo=${NUR_REPO}"; fi
