# This file has been generated by node2nix 1.9.0. Do not edit!

{nodeEnv, fetchurl, fetchgit, nix-gitignore, stdenv, lib, globalBuildInputs ? []}:

let
  sources = {
    "lunr-2.3.9" = {
      name = "lunr";
      packageName = "lunr";
      version = "2.3.9";
      src = fetchurl {
        url = "https://registry.npmjs.org/lunr/-/lunr-2.3.9.tgz";
        sha512 = "zTU3DaZaF3Rt9rhN3uBMGQD3dD2/vFQqnvZCDv4dl5iOzq2IZQqTxu90r4E5J+nP70J3ilqVCrbho2eWaeW8Ow==";
      };
    };
    "lunr-languages-1.0.0" = {
      name = "lunr-languages";
      packageName = "lunr-languages";
      version = "1.0.0";
      src = fetchurl {
        url = "https://registry.npmjs.org/lunr-languages/-/lunr-languages-1.0.0.tgz";
        sha1 = "830bca2fe864b713ebe13ff33ed48ee06e635723";
      };
    };
    "os-tmpdir-1.0.2" = {
      name = "os-tmpdir";
      packageName = "os-tmpdir";
      version = "1.0.2";
      src = fetchurl {
        url = "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz";
        sha1 = "bbe67406c79aa85c5cfec766fe5734555dfa1274";
      };
    };
    "tmp-0.0.33" = {
      name = "tmp";
      packageName = "tmp";
      version = "0.0.33";
      src = fetchurl {
        url = "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz";
        sha512 = "jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==";
      };
    };
  };
  args = {
    name = "acceptance_tests";
    packageName = "acceptance_tests";
    version = "1.0.0";
    src = ./.;
    dependencies = [
      sources."lunr-2.3.9"
      sources."lunr-languages-1.0.0"
      sources."os-tmpdir-1.0.2"
      sources."tmp-0.0.33"
    ];
    buildInputs = globalBuildInputs;
    meta = {
      description = "Acceptance tests for Lunr.py";
      license = "MIT";
    };
    production = true;
    bypassCache = true;
    reconstructLock = false;
  };
in
{
  args = args;
  sources = sources;
  tarball = nodeEnv.buildNodeSourceDist args;
  package = nodeEnv.buildNodePackage args;
  shell = nodeEnv.buildNodeShell args;
  nodeDependencies = nodeEnv.buildNodeDependencies (lib.overrideExisting args {
    src = stdenv.mkDerivation {
      name = args.name + "-package-json";
      src = nix-gitignore.gitignoreSourcePure [
        "*"
        "!package.json"
        "!package-lock.json"
      ] args.src;
      dontBuild = true;
      installPhase = "mkdir -p $out; cp -r ./* $out;";
    };
  });
}
